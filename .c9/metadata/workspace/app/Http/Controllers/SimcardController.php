{"changed":true,"filter":false,"title":"SimcardController.php","tooltip":"/app/Http/Controllers/SimcardController.php","value":"<?php\n\nnamespace App\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\n\nuse App\\Http\\Requests;\nuse App\\Http\\Controllers\\Controller;\n\nclass SimcardController extends Controller\n{\n     public function descargarProximasVencer(Request $request)\n    {\n        if($request->ajax()){\n            $user =  \\Auth::User();\n            $distribuidor = $request['distribuidor'];\n            if($distribuidor == null)\n                $distribuidor = $user->name;\n            if(strpos($distribuidor, 'TODOS') === false){\n                 $datos = \\DB::select(\"select users.name, simcards.numero, simcards.fecha_vencimiento, datediff(simcards.fecha_vencimiento,curdate()) diferencia, simcards.tipo from simcards inner join subdistribuidores on simcards.nombreSubdistribuidor = subdistribuidores.nombre inner join users on subdistribuidores.emailDistribuidor = users.email where simcards.fecha_vencimiento >= ? and simcards.fecha_vencimiento < ? and simcards.fecha_activacion is null and users.name = ? order by simcards.tipo,datediff(simcards.fecha_vencimiento,curdate())\",[$request['fecha_inicial'], $request['fecha_final'],$distribuidor]);\n            }else{\n                $datos = \\DB::select(\"select users.name, simcards.numero, simcards.fecha_vencimiento, datediff(simcards.fecha_vencimiento,curdate()) diferencia, simcards.tipo from simcards inner join subdistribuidores on simcards.nombreSubdistribuidor = subdistribuidores.nombre inner join users on subdistribuidores.emailDistribuidor = users.email where simcards.fecha_vencimiento >= ? and simcards.fecha_vencimiento < ? and simcards.fecha_activacion is null order by simcards.tipo,datediff(simcards.fecha_vencimiento,curdate())\",[$request['fecha_inicial'], $request['fecha_final']]);\n            }\n            $myfile = fopen(\"temp/simcardsVencer.csv\", \"w\");\n            fwrite($myfile, \"DISTRIBUIDOR;TIPO;NUMERO;FECHA VENCIMIENTO;DIAS PARA VENCER\\n\");\n            foreach($datos as $registro){\n                fwrite($myfile, utf8_decode($registro->name) . \";\" . $registro->tipo . \";\" . $registro->numero . \";\" . $registro->fecha_vencimiento . \";\" . $registro->diferencia . \"\\n\");\n            }\n            fclose($myfile);\n            return 1;\n        }\n    }\n    \n    public function descargarLibres(Request $request)\n    {\n        \n        if($request->ajax()){\n            $user =  \\Auth::User();\n            $distribuidor = $request['distribuidor'];\n            if($distribuidor == null)\n                $distribuidor = $user->name;\n            if(strpos($distribuidor, 'TODOS') === false){\n                 $datos = \\DB::select(\"select users.name, simcards.numero, simcards.fecha_vencimiento,nombre_empresa,NIT,direccion_empresa,cod_scl,cod_punto,valor,plan,responsable,libres.cedula,libres.fecha_entrega,direccion_responsable,ciudad_responsable,barrio_responsable,libres.telefono,detalle_llamada,fecha_llamada from simcards inner join subdistribuidores on simcards.nombreSubdistribuidor = subdistribuidores.nombre inner join users on subdistribuidores.emailDistribuidor = users.email inner join libres on simcards.numero = libres.numero where users.name = ? order by simcards.fecha_vencimiento\",[$distribuidor]);\n            }else{\n                $datos = \\DB::select(\"select users.name, simcards.numero, simcards.fecha_vencimiento,nombre_empresa,NIT,direccion_empresa,cod_scl,cod_punto,valor,plan,responsable,libres.cedula,libres.fecha_entrega,direccion_responsable,ciudad_responsable,barrio_responsable,libres.telefono,detalle_llamada,fecha_llamada from simcards inner join subdistribuidores on simcards.nombreSubdistribuidor = subdistribuidores.nombre inner join users on subdistribuidores.emailDistribuidor = users.email inner join libres on simcards.numero = libres.numero order by users.name,simcards.fecha_vencimiento\");\n            }\n            \n            $myfile = fopen(\"temp/simcardsLibres.csv\", \"w\");\n            fwrite($myfile, \"DISTRIBUIDOR; NUMERO; FECHA VENCIMIENTO;EMPRESA;NIT;DIRECCION;COD_SCL;COD_PUNTO;VALOR;PLAN;RESPONSABLE;CEDULA;FECHA ENTREGA;DIRECCION RESPONSABLE;CIUDAD RESPONSABLE;BARRIO RESPONSABLE;TELEFONO;DETALLE LLAMADA;FECHA LLAMADA\\n\");\n            foreach($datos as $registro){\n                    fwrite($myfile, utf8_decode($registro->name) . \";\" . $registro->numero . \";\" . $registro->fecha_vencimiento . \";\" . utf8_decode($registro->nombre_empresa) . \";\" . $registro->NIT . \";\" . $registro->direccion_empresa . \";\" . $registro->cod_scl . \";\" . $registro->cod_punto . \";\" . $registro->valor . \";\" . preg_replace('/[\\x00-\\x1F\\x80-\\xFF]/', '', $registro->plan) . \";\" . utf8_decode($registro->responsable) . \";\" . $registro->cedula . \";\" . $registro->fecha_entrega . \";\" . $registro->direccion_responsable. \";\" . $registro->ciudad_responsable . \";\" . utf8_decode($registro->barrio_responsable) . \";\" . $registro->telefono . \";\" . $registro->detalle_llamada . \";\" . $registro->fecha_llamada  . \"\\n\");\n            }\n            fclose($myfile);\n            return 1;\n        }\n    }\n    public function subirArchivo(Request $request){\n        $action = $request['accion'];\n        if($action == \"ADD\"){\n            $file = $request->file('image');\n            if(!file_exists($file)) {\n                die(\"File not found. Make sure you specified the correct path.\");\n            }\n            try {\n                $pdo = \\DB::connection()->getPdo();\n            } catch (PDOException $e) {\n                die(\"database connection failed: \".$e->getMessage());\n            }\n            $pdo->exec('SET foreign_key_checks = 0');\n            $columns = '(numero,ICC,fecha_vencimiento,tipo,nombreSubdistribuidor)';\n            $pdo->exec(\"\n                LOAD DATA LOCAL INFILE \".$pdo->quote($file).\" IGNORE INTO TABLE `simcards`\n                  FIELDS TERMINATED BY \".$pdo->quote(\";\").\"\n                  LINES TERMINATED BY \".$pdo->quote(\"\\n\").\"\n                  IGNORE 0 LINES \". $columns);\n            $pdo->exec(\"delete from simcards_temp\");      \n            $affectedRows = $pdo->exec(\"\n                LOAD DATA LOCAL INFILE \".$pdo->quote($file).\" REPLACE INTO TABLE `simcards_temp`\n                  FIELDS TERMINATED BY \".$pdo->quote(\";\").\"\n                  LINES TERMINATED BY \".$pdo->quote(\"\\n\").\"\n                  IGNORE 0 LINES \". $columns);\n            $pdo->exec(\"UPDATE simcards_temp SET nombreSubdistribuidor = REPLACE(REPLACE(nombreSubdistribuidor, '\\r', ''), '\\n', '');\");\n            $pdo->exec(\"update simcards inner join simcards_temp on simcards.numero = simcards_temp.numero set simcards.ICC = simcards_temp.ICC, simcards.fecha_vencimiento=simcards_temp.fecha_vencimiento,simcards.nombreSubdistribuidor = simcards_temp.nombreSubdistribuidor, simcards.tipo = simcards_temp.tipo, simcards.fecha_activacion = null\");                  \n            $pdo->exec('SET foreign_key_checks = 1');\n            return \\Redirect::route('simcard')->with('result' ,$affectedRows); \n        }else if($action == \"UPLOAD\"){\n            $file = $request->file('image');\n            if(!file_exists($file)) {\n                die(\"File not found. Make sure you specified the correct path.\");\n            }\n            try {\n                $pdo = \\DB::connection()->getPdo();\n            } catch (PDOException $e) {\n                die(\"database connection failed: \".$e->getMessage());\n            }\n            $pdo->exec(\"delete from simcards_temp\");\n            $columns = '(ICC,numero, fecha_activacion)';\n            $affectedRows = $pdo->exec(\"\n                LOAD DATA LOCAL INFILE \".$pdo->quote($file).\" REPLACE INTO TABLE `simcards_temp`\n                  FIELDS TERMINATED BY \".$pdo->quote(\";\").\"\n                  LINES TERMINATED BY \".$pdo->quote(\"\\n\").\"\n                  IGNORE 0 LINES \". $columns);\n            $pdo->exec(\"update simcards inner join simcards_temp on simcards.numero = simcards_temp.numero set simcards.fecha_activacion=simcards_temp.fecha_activacion \");\n            $pdo->exec(\"UPDATE simcards SET fecha_vencimiento =  DATE_ADD(fecha_activacion, INTERVAL 6 MONTH) where fecha_activacion is not null and tipo = 1\");\n            $pdo->exec(\"UPDATE simcards SET fecha_vencimiento =  DATE_ADD(fecha_activacion, INTERVAL 1 YEAR) where fecha_activacion is not null and tipo = 2\");\n            return \\Redirect::route('simcard')->with('result' ,$affectedRows); \n        }else if($action == \"ADDL\"){\n            $file = $request->file('image');\n            if(!file_exists($file)) {\n                die(\"File not found. Make sure you specified the correct path.\");\n            }\n            try {\n                $pdo = \\DB::connection()->getPdo();\n            } catch (PDOException $e) {\n                die(\"database connection failed: \".$e->getMessage());\n            }\n            $columns = '(nombreSubdistribuidor,numero, ICC,fecha_activacion, @dummy, @dummy, @dummy,@dummy,@dummy,@dummy,@dummy)';\n            $pdo->exec(\"delete from simcards_temp\");\n            $pdo->exec(\"\n                LOAD DATA LOCAL INFILE \".$pdo->quote($file).\" IGNORE INTO TABLE `simcards`\n                  FIELDS TERMINATED BY \".$pdo->quote(\";\").\"\n                  LINES TERMINATED BY \".$pdo->quote(\"\\n\").\"\n                  IGNORE 0 LINES\". $columns . \"\n                  SET tipo = 2\");\n            $pdo->exec(\"\n                LOAD DATA LOCAL INFILE \".$pdo->quote($file).\" REPLACE INTO TABLE `simcards_temp`\n                  FIELDS TERMINATED BY \".$pdo->quote(\";\").\"\n                  LINES TERMINATED BY \".$pdo->quote(\"\\n\").\"\n                  IGNORE 0 LINES\". $columns . \"\n                  SET tipo = 2\");\n            $pdo->exec(\"update simcards inner join simcards_temp on simcards.numero = simcards_temp.numero set simcards.fecha_activacion=simcards_temp.fecha_activacion, simcards.nombreSubdistribuidor = simcards_temp.nombreSubdistribuidor\");      \n            \n            $columns = '(@dummy,numero, @dummy,fecha_activacion,NIT, nombre_empresa, direccion_empresa,cod_scl,cod_punto,valor,plan)';\n            $affectedRows = $pdo->exec(\"\n                LOAD DATA LOCAL INFILE \".$pdo->quote($file).\" REPLACE INTO TABLE `libres`\n                  FIELDS TERMINATED BY \".$pdo->quote(\";\").\"\n                  LINES TERMINATED BY \".$pdo->quote(\"\\n\").\"\n                  IGNORE 0 LINES \". $columns);\n            $pdo->exec(\"UPDATE simcards SET fecha_vencimiento =  DATE_ADD(fecha_activacion, INTERVAL 1 YEAR) where fecha_activacion is not null and tipo = 2\");\n            return \\Redirect::route('simcard')->with('result' ,$affectedRows); \n        }\n        return \\Redirect::route('simcard', ['result' => []]);\n    }\n       \n    public function getId(Request $request)\n    {\n        if($request->ajax()){\n            $ICC = \\DB::table('simcards')->select('ICC')->orderBy(\\DB::raw('ICC*1'))->first();\n            $ICC = $ICC->ICC - 1;\n            return $ICC;\n        }\n    }\n   public function buscarSimcard(Request $request)\n    {\n        if($request->ajax()){\n            if($request['dato'] != null){\n                $simcard = \\DB::table('simcards')->join('subdistribuidores','simcards.nombreSubdistribuidor','=','subdistribuidores.nombre')->join('users','subdistribuidores.emailDistribuidor','=','users.email')->where('numero', '=', $request['dato'])->orWhere('ICC', '=', $request['dato'])->get();\n            }else{\n                $simcard = [];\n            }\n            return $simcard;\n        }\n    }\n    \n    public function asignarPaquete(Request $request)\n    {\n        if($request->ajax()){\n           $sim = \\DB::table('simcards')->where('numero', '=', $request['dato'])->orWhere('ICC', '=', $request['dato'])->get();\n           if($sim != null){\n               if($sim[0]->paquete != 0){\n                   $fecha_entrega = date('Y-m-d H:i:s');\n                   $sims = \\DB::table('simcards')->where('paquete', '=', $sim[0]->paquete)->get();\n                   foreach($sims as $simcard){\n                       $toModify = $simcard = \\App\\Simcard::find($simcard->ICC);\n                       $toModify->nombreSubdistribuidor = $request['sub'];\n                       $toModify->fecha_entrega = $fecha_entrega;\n                       $toModify->save();\n                   }\n                   return 1;\n               }else{\n                   return -2;\n               }\n           }else{\n               return -1;\n           }\n        }\n    }\n    \n    public function asignarUnidad(Request $request)\n    {\n        if($request->ajax()){\n           try{\n                $sim = \\App\\Simcard::find($request['ICC']);\n                if($sim != null){\n                    $fecha_entrega = date('Y-m-d H:i:s');\n                    $sim->nombreSubdistribuidor = $request['sub'];\n                    $sim->fecha_entrega = $fecha_entrega;\n                    $sim->save();\n                    return 1;\n                }else{\n                    return \"Sim no encontrada.\";\n                }\n           }catch(Exception $e){\n               return $e;\n           }\n        }\n    }\n    \n    public function buscarSimcardLibre(Request $request)\n    {\n        if($request->ajax()){\n            if($request['dato'] != null){\n                $simcard = \\DB::table('libres')->where('numero', '=', $request['dato'])->get();\n            }else{\n                $simcard = [];\n            }\n            return $simcard;\n        }\n    }\n    \n    public function actualizarLibre(Request $request)\n    {\n        if($request->ajax()){\n            if($request['dato'] != null){\n                $dato = $request['dato']; \n                $simcard = \\App\\Libre::find($dato[0]);\n                $simcard->responsable = $dato[1];\n                $simcard->cedula = $dato[2];\n                $simcard->telefono = $dato[3];\n                $simcard->ciudad_responsable = $dato[4];\n                $simcard->barrio_responsable = $dato[5];\n                $simcard->fecha_entrega = $dato[6];\n                $simcard->fecha_llamada = $dato[7];\n                $simcard->detalle_llamada = $dato[8];\n                $simcard->direccion_responsable = $dato[9];\n                $simcard->save();\n                return 1;\n            }else{\n                $simcard = [];\n            }\n            return $simcard;\n        }\n    }\n    public function empaquetar(Request $request){\n        if($request->ajax()){\n            $datos = $request['datos'];\n            $paquete = \\DB::table('simcards')->select(\\DB::raw('max(paquete) as paquete'))->first();\n            foreach($datos as $dato){\n                $simcard = \\DB::table('simcards')->where('numero', '=',$dato)->first();\n                $sim = \\App\\Simcard::find($simcard->ICC);\n                $sim->paquete = $paquete->paquete+1;\n                $sim->save();\n            }\n            return '1';\n        }\n    }\n    \n    public function datosSimcard(Request $request){\n        if($request->ajax()){\n            $user =  \\Auth::User();\n            $year =  date('Y', time());\n            $mesActualLabel = date('M', time());\n            $mesAnteriorLabel = date('M', strtotime(date('Y-m').\" -1 month\"));\n            $mes2AnteriorLabel = date('M', strtotime(date('Y-m').\" -2month\"));\n            $mes3AnteriorLabel = date('M', strtotime(date('Y-m').\" -3month\"));\n            $mes4AnteriorLabel = date('M', strtotime(date('Y-m').\" -4month\"));\n            $mesActual = date('m', time());\n            $mesAnterior = date('m', strtotime(date('Y-m').\" -1 month\"));\n            $mes2Anterior = date('m', strtotime(date('Y-m').\" -2month\"));\n            $mes3Anterior = date('m', strtotime(date('Y-m').\" -3month\"));\n            $mes4Anterior = date('m', strtotime(date('Y-m').\" -4month\"));\n            \n            $labelMeses = [$mes4AnteriorLabel,$mes3AnteriorLabel,$mes2AnteriorLabel, $mesAnteriorLabel,$mesActualLabel];\n            $sims = \\DB::select(\"SELECT \n                count(case when Month(sim.fecha_activacion) = ? and Year(sim.fecha_activacion) = ? then numero end) hoyActivas, \n                count( case when Month(sim.fecha_activacion) = ? and Year(sim.fecha_activacion) = ? then numero end) mesAntesActivas, \n                count( case when Month(sim.fecha_activacion) = ? and Year(sim.fecha_activacion) = ? then numero end) mes2AntesActivas, \n                count( case when Month(sim.fecha_activacion) = ? and Year(sim.fecha_activacion) = ? then numero end) mes3AntesActivas, \n                count( case when Month(sim.fecha_activacion) = ? and Year(sim.fecha_activacion) = ? then numero end) mes4AntesActivas, \n                count(case when Month(sim.fecha_vencimiento) = ? and Year(sim.fecha_vencimiento) = ? then numero end) hoyVencidas, \n                count(case when Month(sim.fecha_vencimiento) = ? and Year(sim.fecha_vencimiento) = ? then numero end) mesAntesVencidas,\n                count(case when Month(sim.fecha_vencimiento) = ? and Year(sim.fecha_vencimiento) = ? then numero end) mes2AntesVencidas,\n                count(case when Month(sim.fecha_vencimiento) = ? and Year(sim.fecha_vencimiento) = ? then numero end) mes3AntesVencidas,\n                count(case when Month(sim.fecha_vencimiento) = ? and Year(sim.fecha_vencimiento) = ? then numero end) mes4AntesVencidas\n                FROM simcards sim inner join subdistribuidores sub on sim.nombreSubdistribuidor = sub.nombre inner join users u on sub.emailDistribuidor = u.email where u.email = ? and sim.tipo=1\",[$mesActual,$year,$mesAnterior,$year,$mes2Anterior,$year,$mes3Anterior,$year,$mes4Anterior,$year,$mesActual,$year,$mesAnterior,$year,$mes2Anterior,$year,$mes3Anterior,$year,$mes4Anterior,$year,$user->email]);\n            \n            $simsPrepago = [$sims[0]->mes4AntesActivas,$sims[0]->mes3AntesActivas,$sims[0]->mes2AntesActivas,$sims[0]->mesAntesActivas,$sims[0]->hoyActivas,$sims[0]->mes4AntesVencidas,$sims[0]->mes3AntesVencidas,$sims[0]->mes2AntesVencidas,$sims[0]->mesAntesVencidas,$sims[0]->hoyVencidas];\n            \n            \n            \n            //*/\n            $response = array($simsPrepago, $labelMeses);\n            return $response;;\n        }\n    }\n    \n    public function buscarPaquete(Request $request)\n    {\n        if($request->ajax()){\n            $colors = [];\n            if($request['dato_paquete'] != null){\n                $sim = \\DB::table('simcards')->where('numero', '=', $request['dato_paquete'])->orWhere('ICC', '=', $request['dato_paquete'])->get();\n                if($sim != null){\n                    if($sim[0]->paquete != 0){\n                        $simcard = \\DB::table('simcards')->select(\\DB::raw('DATEDIFF(CURDATE(),fecha_vencimiento) as month'),'numero','fecha_activacion')->where('paquete',$sim[0]->paquete)->get();\n                    }else{\n                        $simcard = [];\n                        $months= [];\n                    }\n                }else{\n                    $simcard = [];\n                    $months= [];\n                }\n            }else{\n                $simcard = [];\n            }\n            \n            return view('/simcardsPaquete', array('simcards'=>$simcard));\n        }\n    }\n    \n    public function datosAsignaciones(Request $request){\n        if($request->ajax()){\n            $user =  \\Auth::User();\n            $fecha_inicial = date_create_from_format(\"Y-m-d\",$request['fecha_inicial']);\n            $fecha_final = date_create_from_format(\"Y-m-d\", $request['fecha_final']);\n            \n            if($request['distribuidor'] == null){\n                $datos = \\DB::select(\"select simcards.fecha_entrega,subdistribuidores.nombre, simcards.tipo, count(simcards.numero) cantidad from simcards INNER JOIN subdistribuidores on simcards.nombreSubdistribuidor = subdistribuidores.nombre INNER JOIN users on subdistribuidores.emailDistribuidor = users.email where users.name = ? and simcards.fecha_entrega > ? and simcards.fecha_entrega < ? group by simcards.fecha_entrega,subdistribuidores.nombre, simcards.tipo\",\n                     [$user->name, $fecha_inicial, $fecha_final]);\n            }else{\n                $datos = \\DB::select(\"select simcards.fecha_entrega,subdistribuidores.nombre, simcards.tipo, count(simcards.numero) cantidad from simcards INNER JOIN subdistribuidores on simcards.nombreSubdistribuidor = subdistribuidores.nombre INNER JOIN users on subdistribuidores.emailDistribuidor = users.email where users.name = ? and simcards.fecha_entrega > ? and simcards.fecha_entrega < ? group by simcards.fecha_entrega,subdistribuidores.nombre, simcards.tipo\",\n                     [$request['distribuidor'], $fecha_inicial, $fecha_final]);\n            }\n            return $datos;\n        }\n    }\n    \n    public function asignaciones(Request $request){\n        if($request->ajax()){\n            $user =  \\Auth::User();\n            $fecha_inicial = date_create_from_format(\"Y-m-d\",$request['fecha_inicial']);\n            $fecha_final = date_create_from_format(\"Y-m-d\", $request['fecha_final']);\n            if($user->isAdmin){\n                $datos = \\DB::select(\"select simcards.fecha_entrega,subdistribuidores.nombre, simcards.tipo, simcards.numero,simcards.ICC, users.name from simcards INNER JOIN subdistribuidores on simcards.nombreSubdistribuidor = subdistribuidores.nombre INNER JOIN users on subdistribuidores.emailDistribuidor = users.email where users.name = ? and simcards.fecha_entrega >= ? and simcards.fecha_entrega <= ?\",\n                     [$request['distribuidor'],$fecha_inicial,$fecha_final]);\n                $myfile = fopen(\"temp/asignacionesSimcards.csv\", \"w\");\n                $totalPrepago = 0;\n                $totalLibre = 0;\n                fwrite($myfile, \"FECHA ENTREGA;DISTRIBUIDOR;SUBDISTRIBUIDOR;NUMERO;ICC;TIPO\\n\");\n                foreach($datos as $dato){\n                    fwrite($myfile, $dato->fecha_entrega . \";\" . utf8_decode($dato->name) . \";\" . utf8_decode($dato->nombre) . \";\" . $dato->numero . \";\" . $dato->ICC . \";\" . $dato->tipo . \"\\n\");\n                    if($dato->tipo == 1){\n                        $totalPrepago++;\n                    }else{\n                        $totalLibre++;\n                    }\n                }\n                fwrite($myfile, \"TOTAL LINEAS:,\" . ($totalPrepago+$totalLibre) . \",\\n\");\n                fwrite($myfile, \"TOTAL PREPAGO:,\" . $totalPrepago . \",\\n\");\n                fwrite($myfile, \"TOTAL LIBRE:,\" . $totalLibre . \",\\n\");\n                fclose($myfile);\n                return 1;\n            }\n        }\n    }\n}\n","undoManager":{"mark":72,"position":100,"stack":[[{"start":{"row":102,"column":106},"end":{"row":102,"column":107},"action":"remove","lines":["T"],"id":2337}],[{"start":{"row":102,"column":105},"end":{"row":102,"column":106},"action":"remove","lines":["N"],"id":2338}],[{"start":{"row":102,"column":104},"end":{"row":102,"column":105},"action":"remove","lines":["O"],"id":2339}],[{"start":{"row":102,"column":103},"end":{"row":102,"column":104},"action":"remove","lines":["M"],"id":2340}],[{"start":{"row":102,"column":103},"end":{"row":102,"column":104},"action":"insert","lines":["Y"],"id":2341}],[{"start":{"row":102,"column":104},"end":{"row":102,"column":105},"action":"insert","lines":["E"],"id":2342}],[{"start":{"row":102,"column":105},"end":{"row":102,"column":106},"action":"insert","lines":["A"],"id":2343}],[{"start":{"row":102,"column":106},"end":{"row":102,"column":107},"action":"insert","lines":["R"],"id":2344}],[{"start":{"row":102,"column":155},"end":{"row":102,"column":156},"action":"remove","lines":["1"],"id":2345}],[{"start":{"row":102,"column":155},"end":{"row":102,"column":156},"action":"insert","lines":["2"],"id":2346}],[{"start":{"row":101,"column":108},"end":{"row":101,"column":109},"action":"remove","lines":["S"],"id":2347}],[{"start":{"row":116,"column":11},"end":{"row":116,"column":28},"action":"remove","lines":[" $affectedRows = "],"id":2348}],[{"start":{"row":116,"column":11},"end":{"row":116,"column":12},"action":"insert","lines":["c"],"id":2349}],[{"start":{"row":116,"column":11},"end":{"row":116,"column":12},"action":"remove","lines":["c"],"id":2350}],[{"start":{"row":116,"column":11},"end":{"row":116,"column":12},"action":"insert","lines":[" "],"id":2351}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["$"],"id":2352}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["a"],"id":2353}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["f"],"id":2354}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["f"],"id":2355}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["e"],"id":2356}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["c"],"id":2357}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["t"],"id":2358}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["e"],"id":2359}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["d"],"id":2360}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["R"],"id":2361}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["o"],"id":2362}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["w"],"id":2363}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["s"],"id":2364}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":[" "],"id":2365}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":["="],"id":2366}],[{"start":{"row":122,"column":12},"end":{"row":122,"column":13},"action":"remove","lines":[" "],"id":2367}],[{"start":{"row":69,"column":12},"end":{"row":69,"column":28},"action":"remove","lines":["$affectedRows = "],"id":2368}],[{"start":{"row":81,"column":274},"end":{"row":81,"column":275},"action":"insert","lines":[","],"id":2369}],[{"start":{"row":81,"column":275},"end":{"row":81,"column":276},"action":"insert","lines":[" "],"id":2370}],[{"start":{"row":81,"column":276},"end":{"row":81,"column":277},"action":"insert","lines":["f"],"id":2371}],[{"start":{"row":81,"column":277},"end":{"row":81,"column":278},"action":"insert","lines":["e"],"id":2372}],[{"start":{"row":81,"column":278},"end":{"row":81,"column":279},"action":"insert","lines":["c"],"id":2373}],[{"start":{"row":81,"column":279},"end":{"row":81,"column":280},"action":"insert","lines":["h"],"id":2374}],[{"start":{"row":81,"column":280},"end":{"row":81,"column":281},"action":"insert","lines":["a"],"id":2375}],[{"start":{"row":81,"column":281},"end":{"row":81,"column":282},"action":"insert","lines":["_"],"id":2376}],[{"start":{"row":81,"column":282},"end":{"row":81,"column":283},"action":"insert","lines":["a"],"id":2377}],[{"start":{"row":81,"column":283},"end":{"row":81,"column":284},"action":"insert","lines":["c"],"id":2378}],[{"start":{"row":81,"column":284},"end":{"row":81,"column":285},"action":"insert","lines":["t"],"id":2379}],[{"start":{"row":81,"column":285},"end":{"row":81,"column":286},"action":"insert","lines":["i"],"id":2380}],[{"start":{"row":81,"column":286},"end":{"row":81,"column":287},"action":"insert","lines":["v"],"id":2381}],[{"start":{"row":81,"column":287},"end":{"row":81,"column":288},"action":"insert","lines":["a"],"id":2382},{"start":{"row":81,"column":288},"end":{"row":81,"column":289},"action":"insert","lines":["c"]}],[{"start":{"row":81,"column":289},"end":{"row":81,"column":290},"action":"insert","lines":["i"],"id":2383}],[{"start":{"row":81,"column":290},"end":{"row":81,"column":291},"action":"insert","lines":["o"],"id":2384},{"start":{"row":81,"column":291},"end":{"row":81,"column":292},"action":"insert","lines":["n"]}],[{"start":{"row":81,"column":292},"end":{"row":81,"column":293},"action":"insert","lines":[" "],"id":2385}],[{"start":{"row":81,"column":293},"end":{"row":81,"column":294},"action":"insert","lines":["="],"id":2386}],[{"start":{"row":81,"column":294},"end":{"row":81,"column":295},"action":"insert","lines":[" "],"id":2387}],[{"start":{"row":81,"column":295},"end":{"row":81,"column":296},"action":"insert","lines":["n"],"id":2388}],[{"start":{"row":81,"column":296},"end":{"row":81,"column":297},"action":"insert","lines":["u"],"id":2389}],[{"start":{"row":81,"column":297},"end":{"row":81,"column":298},"action":"insert","lines":["l"],"id":2390}],[{"start":{"row":81,"column":298},"end":{"row":81,"column":299},"action":"insert","lines":["l"],"id":2391}],[{"start":{"row":81,"column":276},"end":{"row":81,"column":277},"action":"insert","lines":["s"],"id":2392}],[{"start":{"row":81,"column":277},"end":{"row":81,"column":278},"action":"insert","lines":["i"],"id":2393}],[{"start":{"row":81,"column":278},"end":{"row":81,"column":279},"action":"insert","lines":["m"],"id":2394}],[{"start":{"row":81,"column":279},"end":{"row":81,"column":280},"action":"insert","lines":["c"],"id":2395}],[{"start":{"row":81,"column":280},"end":{"row":81,"column":281},"action":"insert","lines":["a"],"id":2396}],[{"start":{"row":81,"column":281},"end":{"row":81,"column":282},"action":"insert","lines":["r"],"id":2397}],[{"start":{"row":81,"column":282},"end":{"row":81,"column":283},"action":"insert","lines":["d"],"id":2398},{"start":{"row":81,"column":283},"end":{"row":81,"column":284},"action":"insert","lines":["s"]}],[{"start":{"row":81,"column":284},"end":{"row":81,"column":285},"action":"insert","lines":["."],"id":2399}],[{"start":{"row":67,"column":13},"end":{"row":68,"column":0},"action":"insert","lines":["",""],"id":2400},{"start":{"row":68,"column":0},"end":{"row":68,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":68,"column":12},"end":{"row":68,"column":16},"action":"insert","lines":["    "],"id":2401}],[{"start":{"row":68,"column":12},"end":{"row":68,"column":16},"action":"remove","lines":["    "],"id":2402}],[{"start":{"row":68,"column":12},"end":{"row":68,"column":54},"action":"insert","lines":["mysql_query('SET foreign_key_checks = 0');"],"id":2403}],[{"start":{"row":82,"column":329},"end":{"row":83,"column":0},"action":"insert","lines":["",""],"id":2404},{"start":{"row":83,"column":0},"end":{"row":83,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":83,"column":12},"end":{"row":83,"column":54},"action":"insert","lines":["mysql_query('SET foreign_key_checks = 1');"],"id":2405}],[{"start":{"row":68,"column":12},"end":{"row":68,"column":23},"action":"remove","lines":["mysql_query"],"id":2406},{"start":{"row":68,"column":12},"end":{"row":68,"column":24},"action":"insert","lines":["mysqli_query"]}],[{"start":{"row":68,"column":12},"end":{"row":68,"column":24},"action":"remove","lines":["mysqli_query"],"id":2407},{"start":{"row":68,"column":12},"end":{"row":68,"column":23},"action":"insert","lines":["$pdo->exec("]}],[{"start":{"row":68,"column":23},"end":{"row":68,"column":24},"action":"remove","lines":["("],"id":2408}],[{"start":{"row":83,"column":12},"end":{"row":83,"column":24},"action":"remove","lines":["mysql_query("],"id":2409},{"start":{"row":83,"column":12},"end":{"row":83,"column":23},"action":"insert","lines":["$pdo->exec("]}],[{"start":{"row":82,"column":111},"end":{"row":82,"column":112},"action":"insert","lines":["s"],"id":2410}],[{"start":{"row":82,"column":112},"end":{"row":82,"column":113},"action":"insert","lines":["i"],"id":2411}],[{"start":{"row":82,"column":113},"end":{"row":82,"column":114},"action":"insert","lines":["m"],"id":2412}],[{"start":{"row":82,"column":114},"end":{"row":82,"column":115},"action":"insert","lines":["c"],"id":2413}],[{"start":{"row":82,"column":115},"end":{"row":82,"column":116},"action":"insert","lines":["a"],"id":2414}],[{"start":{"row":82,"column":116},"end":{"row":82,"column":117},"action":"insert","lines":["r"],"id":2415}],[{"start":{"row":82,"column":117},"end":{"row":82,"column":118},"action":"insert","lines":["d"],"id":2416}],[{"start":{"row":82,"column":118},"end":{"row":82,"column":119},"action":"insert","lines":["s"],"id":2417}],[{"start":{"row":82,"column":119},"end":{"row":82,"column":120},"action":"insert","lines":["."],"id":2418}],[{"start":{"row":82,"column":120},"end":{"row":82,"column":121},"action":"insert","lines":["I"],"id":2419}],[{"start":{"row":82,"column":121},"end":{"row":82,"column":122},"action":"insert","lines":["C"],"id":2420}],[{"start":{"row":82,"column":122},"end":{"row":82,"column":123},"action":"insert","lines":["C"],"id":2421}],[{"start":{"row":82,"column":123},"end":{"row":82,"column":124},"action":"insert","lines":[" "],"id":2422}],[{"start":{"row":82,"column":124},"end":{"row":82,"column":125},"action":"insert","lines":["="],"id":2423}],[{"start":{"row":82,"column":125},"end":{"row":82,"column":126},"action":"insert","lines":[" "],"id":2424}],[{"start":{"row":82,"column":126},"end":{"row":82,"column":127},"action":"insert","lines":["s"],"id":2425}],[{"start":{"row":82,"column":127},"end":{"row":82,"column":128},"action":"insert","lines":["i"],"id":2426}],[{"start":{"row":82,"column":128},"end":{"row":82,"column":129},"action":"insert","lines":["m"],"id":2427}],[{"start":{"row":82,"column":129},"end":{"row":82,"column":130},"action":"insert","lines":["c"],"id":2428}],[{"start":{"row":82,"column":130},"end":{"row":82,"column":131},"action":"insert","lines":["a"],"id":2429}],[{"start":{"row":82,"column":131},"end":{"row":82,"column":132},"action":"insert","lines":["r"],"id":2430}],[{"start":{"row":82,"column":126},"end":{"row":82,"column":132},"action":"remove","lines":["simcar"],"id":2431},{"start":{"row":82,"column":126},"end":{"row":82,"column":139},"action":"insert","lines":["simcards_temp"]}],[{"start":{"row":82,"column":139},"end":{"row":82,"column":140},"action":"insert","lines":["."],"id":2432}],[{"start":{"row":82,"column":140},"end":{"row":82,"column":141},"action":"insert","lines":["I"],"id":2433}],[{"start":{"row":82,"column":141},"end":{"row":82,"column":142},"action":"insert","lines":["C"],"id":2434}],[{"start":{"row":82,"column":142},"end":{"row":82,"column":143},"action":"insert","lines":["C"],"id":2435}],[{"start":{"row":82,"column":143},"end":{"row":82,"column":144},"action":"insert","lines":[","],"id":2436}],[{"start":{"row":82,"column":144},"end":{"row":82,"column":145},"action":"insert","lines":[" "],"id":2437}]]},"ace":{"folds":[],"scrolltop":1812,"scrollleft":0,"selection":{"start":{"row":81,"column":136},"end":{"row":81,"column":136},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":true,"wrapToView":true},"firstLineState":{"row":64,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1455149536000}